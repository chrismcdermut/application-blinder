'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _commander = require('commander');

var _commander2 = _interopRequireDefault(_commander);

var _package = require('../package.json');

var _package2 = _interopRequireDefault(_package);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MissingOptionError = function (_Error) {
  _inherits(MissingOptionError, _Error);

  function MissingOptionError() {
    _classCallCheck(this, MissingOptionError);

    return _possibleConstructorReturn(this, (MissingOptionError.__proto__ || Object.getPrototypeOf(MissingOptionError)).apply(this, arguments));
  }

  return MissingOptionError;
}(Error);

/**
 * Generic settings
 */

_commander2.default.version(_package2.default.version);

/**
 * Run command
 */
applyOptions(_commander2.default.command('run <manifest>').description('run extension in development environment')).action(runHandler);

/**
 * Build command
 */
applyOptions(_commander2.default.command('build <manifest>').description('build extension for distribution')).action(buildHandler);

/**
 * Start it!
 */
_commander2.default.parse(process.argv);

/**
 * Wrap command with common options
 *
 * @param  {Command} commander
 * @return {Command}
 */
function applyOptions(commander) {
  return commander
  // .option(
  //   '-c --config <path>',
  //   'custom webpack config',
  //   function(path) {
  //     resolvePath('config', path)
  //   }
  // )
  .option('-o --output <path>', 'output directory path');
}

/**
 * Get path from Command option and allow to throw error for missing one
 *
 * @param  {Command} command
 * @param  {String|Boolean} option
 * @return {String}
 */
function resolvePath(pathToResolve) {
  var required = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

  if (required && !pathToResolve) {
    throw new MissingOptionError('error: missing required option \'' + required + '\'');
  }

  return _path2.default.resolve(pathToResolve);
}

/**
 * Extract options from Command
 *
 * @param  {Command} command
 * @return {Object}
 */
function processOptions(options) {
  var output = resolvePath(options.output, 'output');
  // const config = resolvePath(command, 'config')

  return _extends({}, options, {
    output: output
  });
}

/**
 * Returns handler for Command action with given function
 *
 * @param  {Function} runner
 * @param  {String} manifest
 * @param  {Object} options
 */
function actionHandler(runner, manifest, options) {
  try {
    runner(_extends({}, processOptions(options), {
      manifest: _path2.default.resolve(manifest)
    }));
  } catch (ex) {
    if (ex instanceof MissingOptionError) {
      console.error('\n  ' + ex.message + '\n');
    } else {
      throw ex;
    }
  }
}

function runHandler(manifest, options) {
  actionHandler(require('./run'), manifest, options);
}

function buildHandler(manifest, options) {
  actionHandler(require('./build'), manifest, options);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGkuanMiXSwibmFtZXMiOlsiTWlzc2luZ09wdGlvbkVycm9yIiwiRXJyb3IiLCJ2ZXJzaW9uIiwiYXBwbHlPcHRpb25zIiwiY29tbWFuZCIsImRlc2NyaXB0aW9uIiwiYWN0aW9uIiwicnVuSGFuZGxlciIsImJ1aWxkSGFuZGxlciIsInBhcnNlIiwicHJvY2VzcyIsImFyZ3YiLCJjb21tYW5kZXIiLCJvcHRpb24iLCJyZXNvbHZlUGF0aCIsInBhdGhUb1Jlc29sdmUiLCJyZXF1aXJlZCIsInJlc29sdmUiLCJwcm9jZXNzT3B0aW9ucyIsIm9wdGlvbnMiLCJvdXRwdXQiLCJhY3Rpb25IYW5kbGVyIiwicnVubmVyIiwibWFuaWZlc3QiLCJleCIsImNvbnNvbGUiLCJlcnJvciIsIm1lc3NhZ2UiLCJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7Ozs7Ozs7OztJQUVNQSxrQjs7Ozs7Ozs7OztFQUEyQkMsSzs7QUFJakM7Ozs7QUFJQSxvQkFDQ0MsT0FERCxDQUNTLGtCQUFLQSxPQURkOztBQUdBOzs7QUFHQUMsYUFDRSxvQkFDR0MsT0FESCxDQUNXLGdCQURYLEVBRUdDLFdBRkgsQ0FFZSwwQ0FGZixDQURGLEVBSUVDLE1BSkYsQ0FJU0MsVUFKVDs7QUFNQTs7O0FBR0FKLGFBQ0Usb0JBQ0dDLE9BREgsQ0FDVyxrQkFEWCxFQUVHQyxXQUZILENBRWUsa0NBRmYsQ0FERixFQUlFQyxNQUpGLENBSVNFLFlBSlQ7O0FBTUE7OztBQUdBLG9CQUFVQyxLQUFWLENBQWdCQyxRQUFRQyxJQUF4Qjs7QUFFQTs7Ozs7O0FBTUEsU0FBU1IsWUFBVCxDQUFzQlMsU0FBdEIsRUFBaUM7QUFDL0IsU0FDRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVBBLEdBUUNDLE1BUkQsQ0FRUSxvQkFSUixFQVE4Qix1QkFSOUIsQ0FERjtBQVdEOztBQUVEOzs7Ozs7O0FBT0EsU0FBU0MsV0FBVCxDQUFxQkMsYUFBckIsRUFBc0Q7QUFBQSxNQUFsQkMsUUFBa0IseURBQVAsS0FBTzs7QUFDcEQsTUFBR0EsWUFBWSxDQUFDRCxhQUFoQixFQUErQjtBQUM3QixVQUFNLElBQUlmLGtCQUFKLHVDQUEwRGdCLFFBQTFELFFBQU47QUFDRDs7QUFFRCxTQUFPLGVBQUtDLE9BQUwsQ0FBYUYsYUFBYixDQUFQO0FBQ0Q7O0FBRUQ7Ozs7OztBQU1BLFNBQVNHLGNBQVQsQ0FBd0JDLE9BQXhCLEVBQWlDO0FBQy9CLE1BQU1DLFNBQVNOLFlBQVlLLFFBQVFDLE1BQXBCLEVBQTRCLFFBQTVCLENBQWY7QUFDQTs7QUFFQSxzQkFDS0QsT0FETDtBQUVFQztBQUZGO0FBSUQ7O0FBRUQ7Ozs7Ozs7QUFPQSxTQUFTQyxhQUFULENBQXVCQyxNQUF2QixFQUErQkMsUUFBL0IsRUFBeUNKLE9BQXpDLEVBQWtEO0FBQ2hELE1BQUk7QUFDRkcsd0JBQ0tKLGVBQWVDLE9BQWYsQ0FETDtBQUVFSSxnQkFBVSxlQUFLTixPQUFMLENBQWFNLFFBQWI7QUFGWjtBQUlELEdBTEQsQ0FLRSxPQUFNQyxFQUFOLEVBQVU7QUFDVixRQUFHQSxjQUFjeEIsa0JBQWpCLEVBQXFDO0FBQ25DeUIsY0FBUUMsS0FBUixVQUFxQkYsR0FBR0csT0FBeEI7QUFDRCxLQUZELE1BRU87QUFDTCxZQUFNSCxFQUFOO0FBQ0Q7QUFDRjtBQUNGOztBQUVELFNBQVNqQixVQUFULENBQW9CZ0IsUUFBcEIsRUFBOEJKLE9BQTlCLEVBQXVDO0FBQ3JDRSxnQkFBY08sUUFBUSxPQUFSLENBQWQsRUFBZ0NMLFFBQWhDLEVBQTBDSixPQUExQztBQUNEOztBQUdELFNBQVNYLFlBQVQsQ0FBc0JlLFFBQXRCLEVBQWdDSixPQUFoQyxFQUF5QztBQUN2Q0UsZ0JBQWNPLFFBQVEsU0FBUixDQUFkLEVBQWtDTCxRQUFsQyxFQUE0Q0osT0FBNUM7QUFDRCIsImZpbGUiOiJjbGkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSAnZnMnXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJ1xuaW1wb3J0IGNvbW1hbmRlciBmcm9tICdjb21tYW5kZXInXG5pbXBvcnQgcGNrZyBmcm9tICcuLi9wYWNrYWdlLmpzb24nXG5cbmNsYXNzIE1pc3NpbmdPcHRpb25FcnJvciBleHRlbmRzIEVycm9yIHtcblxufVxuXG4vKipcbiAqIEdlbmVyaWMgc2V0dGluZ3NcbiAqL1xuXG5jb21tYW5kZXJcbi52ZXJzaW9uKHBja2cudmVyc2lvbilcblxuLyoqXG4gKiBSdW4gY29tbWFuZFxuICovXG5hcHBseU9wdGlvbnMoXG4gIGNvbW1hbmRlclxuICAgIC5jb21tYW5kKCdydW4gPG1hbmlmZXN0PicpXG4gICAgLmRlc2NyaXB0aW9uKCdydW4gZXh0ZW5zaW9uIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50JylcbikuYWN0aW9uKHJ1bkhhbmRsZXIpO1xuXG4vKipcbiAqIEJ1aWxkIGNvbW1hbmRcbiAqL1xuYXBwbHlPcHRpb25zKFxuICBjb21tYW5kZXJcbiAgICAuY29tbWFuZCgnYnVpbGQgPG1hbmlmZXN0PicpXG4gICAgLmRlc2NyaXB0aW9uKCdidWlsZCBleHRlbnNpb24gZm9yIGRpc3RyaWJ1dGlvbicpXG4pLmFjdGlvbihidWlsZEhhbmRsZXIpO1xuXG4vKipcbiAqIFN0YXJ0IGl0IVxuICovXG5jb21tYW5kZXIucGFyc2UocHJvY2Vzcy5hcmd2KTtcblxuLyoqXG4gKiBXcmFwIGNvbW1hbmQgd2l0aCBjb21tb24gb3B0aW9uc1xuICpcbiAqIEBwYXJhbSAge0NvbW1hbmR9IGNvbW1hbmRlclxuICogQHJldHVybiB7Q29tbWFuZH1cbiAqL1xuZnVuY3Rpb24gYXBwbHlPcHRpb25zKGNvbW1hbmRlcikge1xuICByZXR1cm4gKFxuICAgIGNvbW1hbmRlclxuICAgIC8vIC5vcHRpb24oXG4gICAgLy8gICAnLWMgLS1jb25maWcgPHBhdGg+JyxcbiAgICAvLyAgICdjdXN0b20gd2VicGFjayBjb25maWcnLFxuICAgIC8vICAgZnVuY3Rpb24ocGF0aCkge1xuICAgIC8vICAgICByZXNvbHZlUGF0aCgnY29uZmlnJywgcGF0aClcbiAgICAvLyAgIH1cbiAgICAvLyApXG4gICAgLm9wdGlvbignLW8gLS1vdXRwdXQgPHBhdGg+JywgJ291dHB1dCBkaXJlY3RvcnkgcGF0aCcpXG4gIClcbn1cblxuLyoqXG4gKiBHZXQgcGF0aCBmcm9tIENvbW1hbmQgb3B0aW9uIGFuZCBhbGxvdyB0byB0aHJvdyBlcnJvciBmb3IgbWlzc2luZyBvbmVcbiAqXG4gKiBAcGFyYW0gIHtDb21tYW5kfSBjb21tYW5kXG4gKiBAcGFyYW0gIHtTdHJpbmd8Qm9vbGVhbn0gb3B0aW9uXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIHJlc29sdmVQYXRoKHBhdGhUb1Jlc29sdmUsIHJlcXVpcmVkID0gZmFsc2UpIHtcbiAgaWYocmVxdWlyZWQgJiYgIXBhdGhUb1Jlc29sdmUpIHtcbiAgICB0aHJvdyBuZXcgTWlzc2luZ09wdGlvbkVycm9yKGBlcnJvcjogbWlzc2luZyByZXF1aXJlZCBvcHRpb24gJyR7cmVxdWlyZWR9J2ApXG4gIH1cblxuICByZXR1cm4gcGF0aC5yZXNvbHZlKHBhdGhUb1Jlc29sdmUpXG59XG5cbi8qKlxuICogRXh0cmFjdCBvcHRpb25zIGZyb20gQ29tbWFuZFxuICpcbiAqIEBwYXJhbSAge0NvbW1hbmR9IGNvbW1hbmRcbiAqIEByZXR1cm4ge09iamVjdH1cbiAqL1xuZnVuY3Rpb24gcHJvY2Vzc09wdGlvbnMob3B0aW9ucykge1xuICBjb25zdCBvdXRwdXQgPSByZXNvbHZlUGF0aChvcHRpb25zLm91dHB1dCwgJ291dHB1dCcpXG4gIC8vIGNvbnN0IGNvbmZpZyA9IHJlc29sdmVQYXRoKGNvbW1hbmQsICdjb25maWcnKVxuXG4gIHJldHVybiB7XG4gICAgLi4ub3B0aW9ucyxcbiAgICBvdXRwdXRcbiAgfVxufVxuXG4vKipcbiAqIFJldHVybnMgaGFuZGxlciBmb3IgQ29tbWFuZCBhY3Rpb24gd2l0aCBnaXZlbiBmdW5jdGlvblxuICpcbiAqIEBwYXJhbSAge0Z1bmN0aW9ufSBydW5uZXJcbiAqIEBwYXJhbSAge1N0cmluZ30gbWFuaWZlc3RcbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICovXG5mdW5jdGlvbiBhY3Rpb25IYW5kbGVyKHJ1bm5lciwgbWFuaWZlc3QsIG9wdGlvbnMpIHtcbiAgdHJ5IHtcbiAgICBydW5uZXIoe1xuICAgICAgLi4ucHJvY2Vzc09wdGlvbnMob3B0aW9ucyksXG4gICAgICBtYW5pZmVzdDogcGF0aC5yZXNvbHZlKG1hbmlmZXN0KVxuICAgIH0pXG4gIH0gY2F0Y2goZXgpIHtcbiAgICBpZihleCBpbnN0YW5jZW9mIE1pc3NpbmdPcHRpb25FcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihgXFxuICAke2V4Lm1lc3NhZ2V9XFxuYClcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZXhcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gcnVuSGFuZGxlcihtYW5pZmVzdCwgb3B0aW9ucykge1xuICBhY3Rpb25IYW5kbGVyKHJlcXVpcmUoJy4vcnVuJyksIG1hbmlmZXN0LCBvcHRpb25zKVxufVxuXG5cbmZ1bmN0aW9uIGJ1aWxkSGFuZGxlcihtYW5pZmVzdCwgb3B0aW9ucykge1xuICBhY3Rpb25IYW5kbGVyKHJlcXVpcmUoJy4vYnVpbGQnKSwgbWFuaWZlc3QsIG9wdGlvbnMpXG59XG4iXX0=