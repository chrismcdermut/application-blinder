'use strict';

var _safe = require('colors/safe');

var _safe2 = _interopRequireDefault(_safe);

var _webpack = require('webpack');

var _webpack2 = _interopRequireDefault(_webpack);

var _webpackDevServer = require('webpack-dev-server');

var _webpackDevServer2 = _interopRequireDefault(_webpackDevServer);

var _easyRequire = require('./utils/easyRequire');

var _easyRequire2 = _interopRequireDefault(_easyRequire);

var _override = require('./webpack/override');

var _override2 = _interopRequireDefault(_override);

var _log = require('./utils/log');

var log = _interopRequireWildcard(_log);

var _shared = require('./shared');

var _webpackConfig = require('./webpack/webpack.config.dev');

var _webpackConfig2 = _interopRequireDefault(_webpackConfig);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

process.env.NODE_ENV = 'development';

// npm


// own


/**
 * Override webpack package files
 * @return {Promise}
 */
function override() {
  return new Promise(function (resolve) {
    resolve((0, _override2.default)());
  });
}

/**
 * Build production release
 *
 * @param  {Object} webpackConfig
 * @return {Promise}
 */
function webpackDevelopment(webpackConfig) {
  return new Promise(function (resolve, reject) {
    return (0, _easyRequire2.default)(function () {

      // TODO move to config
      var host = "0.0.0.0";
      var port = 3001;

      new _webpackDevServer2.default((0, _webpack2.default)(webpackConfig), {
        contentBase: 'https://localhost:3001',
        publicPath: webpackConfig.output.publicPath,
        https: true,
        // lazy: true,
        // watchDelay: 50,
        hot: true,
        // Unfortunately quiet swallows everything even error so it can't be used.
        quiet: false,
        // No info filters only initial compilation it seems.
        noInfo: false,
        // noInfo: true,
        // Remove console.log mess during watch.
        stats: {
          // assets: false,
          colors: true
        }
      }).listen(port, host, function (err, result) {
        if (err) {
          reject('webpack: ' + err);
        } else {
          resolve('Listening at https://' + host + ':' + port);
        }
      });
    });
  });
}

function run(options) {
  override().then((0, _shared.prepareManifest)(options)).then(function (Manifest) {
    return (0, _webpackConfig2.default)(Manifest);
  }).then(webpackDevelopment)
  // Development server ready
  .then(function (message) {
    console.log(_safe2.default.green(message));
  })
  // Some error happened
  .catch(function (error) {
    console.log(_safe2.default.red(error.stack || error));
  });
}

module.exports = run;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9ydW4uanMiXSwibmFtZXMiOlsibG9nIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwib3ZlcnJpZGUiLCJQcm9taXNlIiwicmVzb2x2ZSIsIndlYnBhY2tEZXZlbG9wbWVudCIsIndlYnBhY2tDb25maWciLCJyZWplY3QiLCJob3N0IiwicG9ydCIsImNvbnRlbnRCYXNlIiwicHVibGljUGF0aCIsIm91dHB1dCIsImh0dHBzIiwiaG90IiwicXVpZXQiLCJub0luZm8iLCJzdGF0cyIsImNvbG9ycyIsImxpc3RlbiIsImVyciIsInJlc3VsdCIsInJ1biIsIm9wdGlvbnMiLCJ0aGVuIiwiTWFuaWZlc3QiLCJtZXNzYWdlIiwiY29uc29sZSIsImdyZWVuIiwiY2F0Y2giLCJlcnJvciIsInJlZCIsInN0YWNrIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFHQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFHQTs7OztBQUNBOzs7O0FBQ0E7O0lBQVlBLEc7O0FBQ1o7O0FBQ0E7Ozs7Ozs7O0FBWkFDLFFBQVFDLEdBQVIsQ0FBWUMsUUFBWixHQUF1QixhQUF2Qjs7QUFFQTs7O0FBS0E7OztBQU9BOzs7O0FBSUEsU0FBU0MsUUFBVCxHQUFvQjtBQUNsQixTQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQWE7QUFDOUJBLFlBQVEseUJBQVI7QUFDRCxHQUZNLENBQVA7QUFHRDs7QUFFRDs7Ozs7O0FBTUEsU0FBU0Msa0JBQVQsQ0FBNEJDLGFBQTVCLEVBQTJDO0FBQ3pDLFNBQU8sSUFBSUgsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUcsTUFBVixFQUFxQjtBQUN0QyxXQUFPLDJCQUFZLFlBQU07O0FBRXZCO0FBQ0EsVUFBTUMsT0FBTyxTQUFiO0FBQ0EsVUFBTUMsT0FBTyxJQUFiOztBQUVBLHFDQUFxQix1QkFBUUgsYUFBUixDQUFyQixFQUE2QztBQUMzQ0kscUJBQWEsd0JBRDhCO0FBRTNDQyxvQkFBWUwsY0FBY00sTUFBZCxDQUFxQkQsVUFGVTtBQUczQ0UsZUFBTyxJQUhvQztBQUkzQztBQUNBO0FBQ0FDLGFBQUssSUFOc0M7QUFPM0M7QUFDQUMsZUFBTyxLQVJvQztBQVMzQztBQUNBQyxnQkFBUSxLQVZtQztBQVczQztBQUNBO0FBQ0FDLGVBQU87QUFDTDtBQUNBQyxrQkFBUTtBQUZIO0FBYm9DLE9BQTdDLEVBc0JHQyxNQXRCSCxDQXNCVVYsSUF0QlYsRUFzQmdCRCxJQXRCaEIsRUFzQnNCLFVBQVVZLEdBQVYsRUFBZUMsTUFBZixFQUF1QjtBQUMzQyxZQUFJRCxHQUFKLEVBQVM7QUFDUGIsaUJBQU8sY0FBY2EsR0FBckI7QUFDRCxTQUZELE1BRU87QUFDTGhCLGtCQUFRLDBCQUEwQkksSUFBMUIsR0FBaUMsR0FBakMsR0FBdUNDLElBQS9DO0FBQ0Q7QUFDRixPQTVCRDtBQTZCRCxLQW5DTSxDQUFQO0FBb0NELEdBckNNLENBQVA7QUFzQ0Q7O0FBRUQsU0FBU2EsR0FBVCxDQUFhQyxPQUFiLEVBQXNCO0FBQ3BCckIsYUFDQ3NCLElBREQsQ0FDTSw2QkFBZ0JELE9BQWhCLENBRE4sRUFFQ0MsSUFGRCxDQUVNLFVBQUNDLFFBQUQsRUFBYztBQUNsQixXQUFPLDZCQUFpQkEsUUFBakIsQ0FBUDtBQUNELEdBSkQsRUFLQ0QsSUFMRCxDQUtNbkIsa0JBTE47QUFNQTtBQU5BLEdBT0NtQixJQVBELENBT00sVUFBU0UsT0FBVCxFQUFrQjtBQUN0QkMsWUFBUTdCLEdBQVIsQ0FBWSxlQUFNOEIsS0FBTixDQUFZRixPQUFaLENBQVo7QUFDRCxHQVREO0FBVUE7QUFWQSxHQVdDRyxLQVhELENBV08sVUFBU0MsS0FBVCxFQUFnQjtBQUNyQkgsWUFBUTdCLEdBQVIsQ0FBWSxlQUFNaUMsR0FBTixDQUFVRCxNQUFNRSxLQUFOLElBQWVGLEtBQXpCLENBQVo7QUFDRCxHQWJEO0FBY0Q7O0FBRURHLE9BQU9DLE9BQVAsR0FBaUJaLEdBQWpCIiwiZmlsZSI6InJ1bi5qcyIsInNvdXJjZXNDb250ZW50IjpbInByb2Nlc3MuZW52Lk5PREVfRU5WID0gJ2RldmVsb3BtZW50J1xuXG4vLyBucG1cbmltcG9ydCBjb2xvciBmcm9tICdjb2xvcnMvc2FmZSdcbmltcG9ydCB3ZWJwYWNrIGZyb20gJ3dlYnBhY2snXG5pbXBvcnQgV2VicGFja0RldlNlcnZlciBmcm9tICd3ZWJwYWNrLWRldi1zZXJ2ZXInXG5cbi8vIG93blxuaW1wb3J0IGVhc3lSZXF1aXJlIGZyb20gJy4vdXRpbHMvZWFzeVJlcXVpcmUnXG5pbXBvcnQgb3ZlcnJpZGVIb3RVcGRhdGVyIGZyb20gJy4vd2VicGFjay9vdmVycmlkZSdcbmltcG9ydCAqIGFzIGxvZyBmcm9tICcuL3V0aWxzL2xvZydcbmltcG9ydCB7IHByZXBhcmVNYW5pZmVzdCB9ICBmcm9tICcuL3NoYXJlZCdcbmltcG9ydCB3ZWJwYWNrR2VuZXJhdG9yIGZyb20gJy4vd2VicGFjay93ZWJwYWNrLmNvbmZpZy5kZXYnXG5cbi8qKlxuICogT3ZlcnJpZGUgd2VicGFjayBwYWNrYWdlIGZpbGVzXG4gKiBAcmV0dXJuIHtQcm9taXNlfVxuICovXG5mdW5jdGlvbiBvdmVycmlkZSgpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgcmVzb2x2ZShvdmVycmlkZUhvdFVwZGF0ZXIoKSlcbiAgfSlcbn1cblxuLyoqXG4gKiBCdWlsZCBwcm9kdWN0aW9uIHJlbGVhc2VcbiAqXG4gKiBAcGFyYW0gIHtPYmplY3R9IHdlYnBhY2tDb25maWdcbiAqIEByZXR1cm4ge1Byb21pc2V9XG4gKi9cbmZ1bmN0aW9uIHdlYnBhY2tEZXZlbG9wbWVudCh3ZWJwYWNrQ29uZmlnKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgcmV0dXJuIGVhc3lSZXF1aXJlKCgpID0+IHtcblxuICAgICAgLy8gVE9ETyBtb3ZlIHRvIGNvbmZpZ1xuICAgICAgY29uc3QgaG9zdCA9IFwiMC4wLjAuMFwiXG4gICAgICBjb25zdCBwb3J0ID0gMzAwMVxuXG4gICAgICBuZXcgV2VicGFja0RldlNlcnZlcih3ZWJwYWNrKHdlYnBhY2tDb25maWcpLCB7XG4gICAgICAgIGNvbnRlbnRCYXNlOiAnaHR0cHM6Ly9sb2NhbGhvc3Q6MzAwMScsXG4gICAgICAgIHB1YmxpY1BhdGg6IHdlYnBhY2tDb25maWcub3V0cHV0LnB1YmxpY1BhdGgsXG4gICAgICAgIGh0dHBzOiB0cnVlLFxuICAgICAgICAvLyBsYXp5OiB0cnVlLFxuICAgICAgICAvLyB3YXRjaERlbGF5OiA1MCxcbiAgICAgICAgaG90OiB0cnVlLFxuICAgICAgICAvLyBVbmZvcnR1bmF0ZWx5IHF1aWV0IHN3YWxsb3dzIGV2ZXJ5dGhpbmcgZXZlbiBlcnJvciBzbyBpdCBjYW4ndCBiZSB1c2VkLlxuICAgICAgICBxdWlldDogZmFsc2UsXG4gICAgICAgIC8vIE5vIGluZm8gZmlsdGVycyBvbmx5IGluaXRpYWwgY29tcGlsYXRpb24gaXQgc2VlbXMuXG4gICAgICAgIG5vSW5mbzogZmFsc2UsXG4gICAgICAgIC8vIG5vSW5mbzogdHJ1ZSxcbiAgICAgICAgLy8gUmVtb3ZlIGNvbnNvbGUubG9nIG1lc3MgZHVyaW5nIHdhdGNoLlxuICAgICAgICBzdGF0czoge1xuICAgICAgICAgIC8vIGFzc2V0czogZmFsc2UsXG4gICAgICAgICAgY29sb3JzOiB0cnVlLFxuICAgICAgICAgIC8vIHZlcnNpb246IGZhbHNlLFxuICAgICAgICAgIC8vIGhhc2g6IGZhbHNlLFxuICAgICAgICAgIC8vIHRpbWluZ3M6IGZhbHNlLFxuICAgICAgICAgIC8vIGNodW5rczogZmFsc2UsXG4gICAgICAgICAgLy8gY2h1bmtNb2R1bGVzOiBmYWxzZVxuICAgICAgICB9XG4gICAgICB9KS5saXN0ZW4ocG9ydCwgaG9zdCwgZnVuY3Rpb24gKGVyciwgcmVzdWx0KSB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICByZWplY3QoJ3dlYnBhY2s6ICcgKyBlcnIpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVzb2x2ZSgnTGlzdGVuaW5nIGF0IGh0dHBzOi8vJyArIGhvc3QgKyAnOicgKyBwb3J0KVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH0pXG4gIH0pXG59XG5cbmZ1bmN0aW9uIHJ1bihvcHRpb25zKSB7XG4gIG92ZXJyaWRlKClcbiAgLnRoZW4ocHJlcGFyZU1hbmlmZXN0KG9wdGlvbnMpKVxuICAudGhlbigoTWFuaWZlc3QpID0+IHtcbiAgICByZXR1cm4gd2VicGFja0dlbmVyYXRvcihNYW5pZmVzdClcbiAgfSlcbiAgLnRoZW4od2VicGFja0RldmVsb3BtZW50KVxuICAvLyBEZXZlbG9wbWVudCBzZXJ2ZXIgcmVhZHlcbiAgLnRoZW4oZnVuY3Rpb24obWVzc2FnZSkge1xuICAgIGNvbnNvbGUubG9nKGNvbG9yLmdyZWVuKG1lc3NhZ2UpKVxuICB9KVxuICAvLyBTb21lIGVycm9yIGhhcHBlbmVkXG4gIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgIGNvbnNvbGUubG9nKGNvbG9yLnJlZChlcnJvci5zdGFjayB8fCBlcnJvcikpXG4gIH0pXG59XG5cbm1vZHVsZS5leHBvcnRzID0gcnVuXG4iXX0=