'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (manifest, _ref2) {
  var buildPath = _ref2.buildPath;
  var src = _ref2.src;


  if (!manifest.chrome_url_overrides) return;

  // TODO: unify with ./action.js
  var _manifest$chrome_url_ = manifest.chrome_url_overrides;
  var bookmarks = _manifest$chrome_url_.bookmarks;
  var history = _manifest$chrome_url_.history;
  var newtab = _manifest$chrome_url_.newtab;


  var overrides = [bookmarks, history, newtab];
  var scripts = [];

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = overrides[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var override = _step.value;

      if (!override) {
        continue;
      }

      var script = (0, _html2.default)(override, src, buildPath);

      scripts.push(script);
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return { scripts: scripts };
};

var _html = require('./lib/html');

var _html2 = _interopRequireDefault(_html);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var process = function process(_ref) {
  var page = _ref.page;
  var buildPath = _ref.buildPath;
  var scripts = _ref.scripts;

  if (!page) return;

  scripts.push((0, _html2.default)(page, buildPath));

  return true;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tYW5pZmVzdC9wcm9jZXNzb3Ivb3ZlcnJpZGVzLmpzIl0sIm5hbWVzIjpbIm1hbmlmZXN0IiwiYnVpbGRQYXRoIiwic3JjIiwiY2hyb21lX3VybF9vdmVycmlkZXMiLCJib29rbWFya3MiLCJoaXN0b3J5IiwibmV3dGFiIiwib3ZlcnJpZGVzIiwic2NyaXB0cyIsIm92ZXJyaWRlIiwic2NyaXB0IiwicHVzaCIsInByb2Nlc3MiLCJwYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7a0JBVWUsVUFBU0EsUUFBVCxTQUFxQztBQUFBLE1BQWpCQyxTQUFpQixTQUFqQkEsU0FBaUI7QUFBQSxNQUFOQyxHQUFNLFNBQU5BLEdBQU07OztBQUVsRCxNQUFHLENBQUNGLFNBQVNHLG9CQUFiLEVBQ0U7O0FBRUY7QUFMa0QsOEJBTWJILFNBQVNHLG9CQU5JO0FBQUEsTUFNM0NDLFNBTjJDLHlCQU0zQ0EsU0FOMkM7QUFBQSxNQU1oQ0MsT0FOZ0MseUJBTWhDQSxPQU5nQztBQUFBLE1BTXZCQyxNQU51Qix5QkFNdkJBLE1BTnVCOzs7QUFRbEQsTUFBTUMsWUFBWSxDQUFDSCxTQUFELEVBQVlDLE9BQVosRUFBcUJDLE1BQXJCLENBQWxCO0FBQ0EsTUFBTUUsVUFBVSxFQUFoQjs7QUFUa0Q7QUFBQTtBQUFBOztBQUFBO0FBV2xELHlCQUFxQkQsU0FBckIsOEhBQWdDO0FBQUEsVUFBdkJFLFFBQXVCOztBQUM5QixVQUFHLENBQUNBLFFBQUosRUFBYztBQUNaO0FBQ0Q7O0FBRUQsVUFBTUMsU0FBUyxvQkFBS0QsUUFBTCxFQUFlUCxHQUFmLEVBQW9CRCxTQUFwQixDQUFmOztBQUVBTyxjQUFRRyxJQUFSLENBQWFELE1BQWI7QUFDRDtBQW5CaUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFxQmxELFNBQU8sRUFBQ0YsZ0JBQUQsRUFBUDtBQUNELEM7O0FBaENEOzs7Ozs7QUFFQSxJQUFNSSxVQUFVLFNBQVZBLE9BQVUsT0FBcUM7QUFBQSxNQUEzQkMsSUFBMkIsUUFBM0JBLElBQTJCO0FBQUEsTUFBckJaLFNBQXFCLFFBQXJCQSxTQUFxQjtBQUFBLE1BQVZPLE9BQVUsUUFBVkEsT0FBVTs7QUFDbkQsTUFBRyxDQUFDSyxJQUFKLEVBQVU7O0FBRVZMLFVBQVFHLElBQVIsQ0FBYSxvQkFBS0UsSUFBTCxFQUFXWixTQUFYLENBQWI7O0FBRUEsU0FBTyxJQUFQO0FBQ0QsQ0FORCIsImZpbGUiOiJvdmVycmlkZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaHRtbCBmcm9tICcuL2xpYi9odG1sJ1xuXG5jb25zdCBwcm9jZXNzID0gZnVuY3Rpb24oe3BhZ2UsIGJ1aWxkUGF0aCwgc2NyaXB0c30pIHtcbiAgaWYoIXBhZ2UpIHJldHVyblxuXG4gIHNjcmlwdHMucHVzaChodG1sKHBhZ2UsIGJ1aWxkUGF0aCkpXG5cbiAgcmV0dXJuIHRydWVcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWFuaWZlc3QsIHtidWlsZFBhdGgsIHNyY30pIHtcblxuICBpZighbWFuaWZlc3QuY2hyb21lX3VybF9vdmVycmlkZXMpXG4gICAgcmV0dXJuXG5cbiAgLy8gVE9ETzogdW5pZnkgd2l0aCAuL2FjdGlvbi5qc1xuICBjb25zdCB7Ym9va21hcmtzLCBoaXN0b3J5LCBuZXd0YWJ9ID0gbWFuaWZlc3QuY2hyb21lX3VybF9vdmVycmlkZXNcblxuICBjb25zdCBvdmVycmlkZXMgPSBbYm9va21hcmtzLCBoaXN0b3J5LCBuZXd0YWJdXG4gIGNvbnN0IHNjcmlwdHMgPSBbXVxuXG4gIGZvciAobGV0IG92ZXJyaWRlIG9mIG92ZXJyaWRlcykge1xuICAgIGlmKCFvdmVycmlkZSkge1xuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICBjb25zdCBzY3JpcHQgPSBodG1sKG92ZXJyaWRlLCBzcmMsIGJ1aWxkUGF0aClcblxuICAgIHNjcmlwdHMucHVzaChzY3JpcHQpXG4gIH1cblxuICByZXR1cm4ge3NjcmlwdHN9XG59XG4iXX0=